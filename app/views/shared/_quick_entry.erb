<div id="quick_entry_container">
	<a href="#" class="add">Add entry</a>
	
<div id="quick_entry">
	<% form_for :event, :html => {:id => "new_event", :class => "on_index"} do |f| %>

	<fieldset id="basics">
		
		<%= f.text_area :body, :cols => 60, :rows => 4, :label => "What are you doing?" %>
	</fieldset>
	
	<div id="options">
		<p class="datepicker">
			<%= f.text_field :date, :size => 12 %>
		</p>
		
		<p>
			<span class="overlay-label">
				<%= f.label :subject, "Project" %>
				<%= f.text_field :subject, :size => 16 %>
			</span>
		</p>
		
		<p>
			<span class="overlay-label">
				<%= f.label :hours %>
				<%= f.text_field :hours, :size => 10 %>
			</span>
		</p>
		<hr class="clear">
	</div>
	
	<p class="actions">
		<button type="submit">Create</button>
	</p>

	<% end %>

	<script type="text/javascript" charset="utf-8">	

	$$('.overlay-label').each(function(elem){
		new TicktockGhostLabel(elem)
	})

	//$('quick_entry').hide()
	
	
	$('quick_entry').setStyle("width:1px;height:1px;opacity:0")
	$('quick_entry_container').down(".add").observe('click', function(){		
		$('quick_entry').morph("width:500px;height:150px;opacity:1", {
			duration:0.3
		})
	})

	new TicktockDateSelect('event_date')
	//$('options').hide()

	$('new_event').observe('submit', function(e){
		new Ajax.Request('/events.js', {
			asynchronous: true,
			method: 'post',
			parameters: Form.serialize('new_event'),

			onSuccess: function(response, jsonObj){
				eventDate = CalendarDate.parse(jsonObj.event.date)

				dateContainerId = 'events_list'

				console.log("Received a thingy")
				console.log("Date was " + dateContainerId)
				console.log("Still working")

				if($(dateContainerId)){
					console.log("Container is on page, should insert")
					console.log(response.responseText)

					$(dateContainerId).insert({top:response.responseText})
					$(dateContainerId).removeClassName('empty')
					$('quick_entry').morph("width:1px;height:1px;opacity:0", {
						duration:0.3
					})
				}
				else {
					console.log("No container, should create or somehow indicate that response succeeded")
				}

				$('new_event').reset()
			},

			onFailure: function(response){
				alert("FAILED!")
			}

		})
		e.stop()
	})
	</script>
</div>
</div>