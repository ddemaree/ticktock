<div id="quick_entry">
	<% form_for :event, :html => {:id => "new_event", :class => "on_index"} do |f| %>

	<fieldset id="basics">
		
		<%= f.text_area :body, :cols => 60, :rows => 4, :label => "What are you doing?" %>
	</fieldset>
	
	<fieldset id="options">
		<p class="field datepicker">
			<%= f.label :date %>
			<%= f.text_field :date, :size => 12 %>
		</p>
		
		<%= f.labeled_text_field :hours, :size => 5 %>
		
	</fieldset>
	
	<p class="actions">
		<button type="submit">Create</button>
	</p>

	<% end %>

	<script type="text/javascript" charset="utf-8">	

	new TicktockDateSelect('event_date')
	$('options').hide()

	options_toggle = new Element('a', {href:"javascript:void%200"})
	options_toggle.update('More options&hellip;')
	options_toggle.observe('click', function(){
		if(this.hasClassName('open')) {
			this.removeClassName('open')
			$('options').hide()
			this.update('More options&hellip;')
		}
		else {
			this.addClassName('open')
			$('options').show()
			this.update('Fewer options&hellip;')
		}
	}.bind(options_toggle))

	$('new_event').down('.actions').insert({top:options_toggle})

	$('new_event').observe('submit', function(e){
		new Ajax.Request('/events.js', {
			asynchronous: true,
			method: 'post',
			parameters: Form.serialize('new_event'),

			onSuccess: function(response, jsonObj){
				eventDate = CalendarDate.parse(jsonObj.event.date)

				dateContainerId = 'events_for_' + eventDate.toString().gsub(/-/,"_")

				console.log("Received a thingy")
				console.log("Date was " + dateContainerId)
				console.log("Still working")

				if($(dateContainerId)){
					console.log("Container is on page, should insert")
					console.log(response.responseText)

					$(dateContainerId).insert({top:response.responseText})
					$(dateContainerId).removeClassName('empty')
				}
				else {
					console.log("No container, should create or somehow indicate that response succeeded")
				}

				$('new_event').reset()
			},

			onFailure: function(response){
				alert("FAILED!")
			}

		})
		e.stop()
	})
	</script>
</div>