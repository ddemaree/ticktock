<h1>Events</h1>

<div class="eight left">
	<div id="events_list">

	<%- @events.group_by(&:date).each do |date, events_for_day| -%>
	<h3 class="date_header"><%= date.to_s(:long) %></h3>

	<div id="events_for_<%= date.strftime("%Y_%m_%d") %>" class="events_for_day">
	<%= render :partial => 'list_item', :collection => events_for_day, :as => :event %>
	</div>

	<%- end -%>
	</div>
</div>

<div class="four right">

<% form_for :event, :html => {:id => "new_event", :class => "on_index"} do |f| %>

<p class="field">
	<%= f.label :body %>
	<%= f.text_area :body, :cols => 60, :rows => 4 %>
</p>

<p class="field datepicker">
	<%= f.label :date %>
	<%# f.date_select :date %>
	<%= f.text_field :date, :size => 12 %>
</p>

<p class="field">
	<%= f.label :hours %>
	<%= f.text_field :hours %>
</p>

<p class="actions">
	<button type="submit">Create</button>
</p>

<% end %>

<script type="text/javascript" charset="utf-8">

new TicktockDateSelect('event_date')

$('new_event').observe('submit', function(e){
	new Ajax.Request('/events', {
		asynchronous: true,
		method: 'post',
		parameters: Form.serialize('new_event'),
		
		onSuccess: function(response, jsonObj){
			eventDate = CalendarDate.parse(jsonObj.event.date)
			
			dateContainerId = 'events_for_' + eventDate.toString().gsub(/-/,"_")
			
			console.log("Received a thingy")
			console.log("Date was " + dateContainerId)
			console.log("Still working")
			
			if($(dateContainerId)){
				console.log("Container is on page, should insert")
				console.log(response.responseText)
				
				$(dateContainerId).insert({top:response.responseText})
			}
			else {
				console.log("No container, should create or somehow indicate that response succeeded")
			}
			
			$('new_event').reset()
		},
		
		onFailure: function(response){
			alert("FAILED!")
		}
	
	})
	e.stop()
})
</script>

</div>

<hr class="clear">